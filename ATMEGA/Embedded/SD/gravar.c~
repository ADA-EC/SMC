/*
 * Programa para escrever dados em um cartão SD usando um lcd para debugar
 *
 * Copyright (C) 2017 ADA-Projetos em Engenharia de Computacao
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Amador Marcelino de Souza Neto (amador.neto@usp.br)
 *
 */

#include <avr/io.h>
#include <util/delay.h>
#include <string.h>
#include <stdlib.h>
#include "lcd.h"
#include "SD/ff.h"
#include "SD/integer.h"


FATFS FatFs;		// Área de trabalho do FAtFs 
FIL *fp;		// Estrutura de File
FRESULT debug;

/*---------------------------------------------------------*/
/* User Provided RTC Function called by FatFs module       */
/* Used to provide a Timestamp for SDCard files and folders*/
DWORD get_fattime (void)
{
	// Returns current time packed into a DWORD variable 
	return	  ((DWORD)(2013 - 1980) << 25)	// Year 2013 
	| ((DWORD)8 << 21)				// Month 7 
	| ((DWORD)2 << 16)				// Mday 28 
	| ((DWORD)20 << 11)				// Hour 0..24
	| ((DWORD)30 << 5)				// Min 0 
	| ((DWORD)0 >> 1);				// Sec 0
}

int main (){

	// reboot delay
	_delay_ms(200);

	//inicializa o lcd
	//lcd_init();
	//sendInst(_LCD_ON | _LCD_CURSOR_ON | _LCD_CURSOR_BLINK);
	//sendInst(_LCD_CLR);
	//sendInst(_LCD_HOME);

	DDRD |= _BV(DDD7) ;
	PORTD &= ~_BV(PORTD7);

	// init sdcard
	UINT bw;
	debug = f_mount(0, &FatFs);		// Give a work area to the FatFs module 

	

		// open file
	fp = (FIL *)malloc(sizeof (FIL));
	
	debug=f_open(fp, "file.txt", FA_WRITE | FA_CREATE_ALWAYS);
	
	// grava no arquivo
	if (debug==FR_OK) {	// Create a file 

		char *text = "Hello World! SDCard support up and running!\r\n";
		f_write(fp, text, strlen(text), &bw);	// Write data to the file 
		f_close(fp);// Close the file 
		/*if (bw == strlen(text)) { //we wrote the entire string
			//Manda para o LCD a string 'printbuff'
			writeStringXY("Gravou samerda", 0, 0);
		}*/
	}
	else (debug==FR_NOT_READY){
		PORTD |= _BV(PORTD7) ;
	}


	_delay_ms(100);
	// desmonta o cartão	
	//f_mount(0, &FatFs);	


	return 0;
}
